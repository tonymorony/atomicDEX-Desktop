name: AtomicDex-Desktop CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master
  schedule:
    - cron: '0 0 * * 1'

jobs:
  
  ci-flow:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name: [
          ubuntu-qt-5-15-0,
          ubuntu-qt-5-15-1,
          osx-qt-5-15-0,
          osx-qt-5-15-1,
          windows-10-qt-5-15-0,
          windows-10-qt-5-15-1
        ]
    
        include:
          - name: ubuntu-qt-5-15-0
            os: ubuntu-16.04
            qt: '5.15.0'

          - name: ubuntu-qt-5-15-1
            os: ubuntu-16.04
            qt: '5.15.1'

          - name: osx-qt-5-15-0
            os: macos-latest
            qt: '5.15.0'

          - name: osx-qt-5-15-1
            os: macos-latest
            qt: '5.15.1'

          - name: windows-10-qt-5-15-0
            os: windows-latest
            qt: '5.15.0'

          - name: windows-10-qt-5-15-1
            os: windows-latest
            qt: '5.15.1'
    
    steps:
      - uses: actions/checkout@v2

      - name: Install QT (Linux)
        if: runner.os == 'Linux'
        uses: KomodoPlatform/install-qt-action@v2
        with:
          version: ${{ matrix.qt }}
          host: 'linux'
          target: 'desktop'
          dir: '${{ github.workspace }}'
          modules: 'qtcharts qtwidgets debug_info'
          aqtversion: '==0.8'
          py7zrversion: '==0.6'

      - name: Install QT (MacOS)
        if: runner.os == 'macOS'
        uses: KomodoPlatform/install-qt-action@v2
        with:
          version: ${{ matrix.qt }}
          host: 'mac'
          target: 'desktop'
          dir: '${{ github.workspace }}'
          modules: 'qtcharts qtwidgets debug_info'

      - name: Install QT (Windows)
        if: runner.os == 'Windows'
        uses: KomodoPlatform/install-qt-action@v2
        with:
          version: ${{ matrix.qt }}
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
          dir: 'C:\'
          modules: 'qtcharts qtwidgets debug_info'

      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        env:
          DEBIAN_FRONTEND: noninteractive
        uses: KomodoPlatform/setup-nim-action@v1.0.2
        with:
          nim-version: '1.2.0'
        run: |
          echo ${{ github.sha }}
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get remove php* msodbcsql17 mysql*
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get upgrade -y

          # base deps
          sudo apt-get install build-essential \
                               libgl1-mesa-dev \
                               ninja-build \
                               curl \
                               wget \
                               software-properties-common \
                               lsb-release \
                               libpulse-dev \
                               libtool \
                               autoconf \
                               unzip \
                               libssl-dev \
                               libxkbcommon-x11-0 \
                               libxcb-icccm4 \
                               libxcb-image0 \
                               libxcb1-dev \
                               libxcb-keysyms1-dev \
                               libxcb-render-util0-dev \
                               libxcb-xinerama0 \
                               libgstreamer-plugins-base1.0-dev \
                               git -y


          # get llvm
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 10

          # set clang version
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 777
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 777

          # set gnu compilers version
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 777
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 777

          sudo apt-get update
          sudo apt-get install libc++abi-10-dev libc++-10-dev -y

          export CXXFLAGS=-stdlib=libc++
          export LDFLAGS=-stdlib=libc++
          export CXX=clang++-10
          export CC=clang-10

          # get right cmake version
          wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.tar.gz
          tar xvf cmake-3.17.3-Linux-x86_64.tar.gz
          cd cmake-3.17.3-Linux-x86_64
          sudo cp -r * /usr/
          sudo cp -r * /usr/local/
          cmake --version

          # get libwally
          git clone https://github.com/KomodoPlatform/libwally-core.git
          cd libwally-core
          ./tools/autogen.sh
          ./configure --disable-shared
          sudo make -j3 install
          cd ..

      - name: prepare build (Linux)
        if: runner.os == 'Linux'
        run: |
         # duplicating because got suspicion that update-alternatives doesnt save between steps

          # set clang version
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 777
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 777

          # set gnu compilers version
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 777
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 777
